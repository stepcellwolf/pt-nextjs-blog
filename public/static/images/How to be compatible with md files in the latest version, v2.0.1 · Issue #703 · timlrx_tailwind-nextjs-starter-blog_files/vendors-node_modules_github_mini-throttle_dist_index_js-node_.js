'use strict'
;(globalThis.webpackChunk = globalThis.webpackChunk || []).push([
  [
    'vendors-node_modules_github_mini-throttle_dist_index_js-node_modules_github_remote-form_dist_-d19e5b',
    'vendors-node_modules_github_catalyst_lib_index_js-node_modules_github_hydro-analytics-client_-978abc0',
    'vendors-node_modules_github_catalyst_lib_index_js-node_modules_github_hydro-analytics-client_-978abc1',
    'vendors-node_modules_github_catalyst_lib_index_js-node_modules_github_hydro-analytics-client_-978abc2',
  ],
  {
    46263: (e, t, n) => {
      function r(e, t = 0, { start: n = !0, middle: r = !0, once: o = !1 } = {}) {
        let i,
          l = 0,
          a = !1
        function s(...c) {
          if (a) return
          let u = Date.now() - l
          ;(l = Date.now()),
            n
              ? ((n = !1), e.apply(this, c), o && s.cancel())
              : ((r && u < t) || !r) &&
                (clearTimeout(i),
                (i = setTimeout(
                  () => {
                    ;(l = Date.now()), e.apply(this, c), o && s.cancel()
                  },
                  r ? t - u : t
                )))
        }
        return (
          (s.cancel = () => {
            clearTimeout(i), (a = !0)
          }),
          s
        )
      }
      function o(e, t = 0, { start: n = !1, middle: o = !1, once: i = !1 } = {}) {
        return r(e, t, { start: n, middle: o, once: i })
      }
      n.d(t, { D: () => o, P: () => r })
    },
    65935: (e, t, n) => {
      let r
      function o(e, t) {
        let n = e.createElement('template')
        return (n.innerHTML = t), e.importNode(n.content, !0)
      }
      function i(e) {
        let t = new URLSearchParams(),
          n = new FormData(e).entries()
        for (let [e, r] of [...n]) t.append(e, r.toString())
        return t.toString()
      }
      n.d(t, { AC: () => d, rK: () => u, uT: () => c })
      let ErrorWithResponse = class ErrorWithResponse extends Error {
        constructor(e, t) {
          super(e), (this.response = t)
        }
      }
      function l() {
        let e, t
        let n = new Promise(function (n, r) {
          ;(e = n), (t = r)
        })
        return [n, e, t]
      }
      let a = [],
        s = []
      function c(e) {
        a.push(e)
      }
      function u(e) {
        s.push(e)
      }
      function d(e, t) {
        r ||
          ((r = new Map()),
          'undefined' != typeof document && document.addEventListener('submit', h))
        let n = r.get(e) || []
        r.set(e, [...n, t])
      }
      function f(e) {
        let t = []
        for (let n of r.keys())
          if (e.matches(n)) {
            let e = r.get(n) || []
            t.push(...e)
          }
        return t
      }
      function h(e) {
        if (!(e.target instanceof HTMLFormElement) || e.defaultPrevented) return
        let t = e.target,
          n = f(t)
        if (0 === n.length) return
        let r = p(t),
          [o, i, c] = l()
        e.preventDefault(),
          m(n, t, r, o).then(
            async (e) => {
              if (e) {
                for (let e of s) await e(t)
                g(r)
                  .then(i, c)
                  .catch(() => {})
                  .then(() => {
                    for (let e of a) e(t)
                  })
              } else t.submit()
            },
            (e) => {
              t.submit(),
                setTimeout(() => {
                  throw e
                })
            }
          )
      }
      async function m(e, t, n, r) {
        let o = !1
        for (let i of e) {
          let [e, a] = l(),
            s = () => ((o = !0), a(), r),
            c = {
              text: s,
              json: () => (n.headers.set('Accept', 'application/json'), s()),
              html: () => (n.headers.set('Accept', 'text/html'), s()),
            }
          await Promise.race([e, i(t, c, n)])
        }
        return o
      }
      function p(e) {
        let t = {
          method: e.method || 'GET',
          url: e.action,
          headers: new Headers({ 'X-Requested-With': 'XMLHttpRequest' }),
          body: null,
        }
        if ('GET' === t.method.toUpperCase()) {
          let n = i(e)
          n && (t.url += (~t.url.indexOf('?') ? '&' : '?') + n)
        } else t.body = new FormData(e)
        return t
      }
      async function g(e) {
        let t = await window.fetch(e.url, {
            method: e.method,
            body: null !== e.body ? e.body : void 0,
            headers: e.headers,
            credentials: 'same-origin',
          }),
          n = {
            url: t.url,
            status: t.status,
            statusText: t.statusText,
            headers: t.headers,
            text: '',
            get json() {
              let e = this,
                t = JSON.parse(e.text)
              return delete e.json, (e.json = t), e.json
            },
            get html() {
              let e = this
              return delete e.html, (e.html = o(document, e.text)), e.html
            },
          },
          r = await t.text()
        if (((n.text = r), t.ok)) return n
        throw new ErrorWithResponse('request failed', n)
      }
    },
    98105: (e, t, n) => {
      function r(e) {
        let t = e.getBoundingClientRect()
        return { top: t.top + window.pageYOffset, left: t.left + window.pageXOffset }
      }
      function o(e) {
        let t = e,
          n = t.ownerDocument
        if (!n || !t.offsetParent) return
        let r = n.defaultView.HTMLElement
        if (t !== n.body) {
          for (; t !== n.body; ) {
            if (!(t.parentElement instanceof r)) return
            t = t.parentElement
            let { position: e, overflowY: n, overflowX: o } = getComputedStyle(t)
            if ('fixed' === e || 'auto' === n || 'auto' === o || 'scroll' === n || 'scroll' === o)
              break
          }
          return t instanceof Document ? null : t
        }
      }
      function i(e, t) {
        let n = t,
          r = e.ownerDocument
        if (!r) return
        let o = r.documentElement
        if (!o || e === o) return
        let i = l(e, n)
        if (!i) return
        n = i._container
        let a =
            n === r.documentElement && r.defaultView
              ? { top: r.defaultView.pageYOffset, left: r.defaultView.pageXOffset }
              : { top: n.scrollTop, left: n.scrollLeft },
          s = i.top - a.top,
          c = i.left - a.left,
          u = n.clientHeight,
          d = n.clientWidth,
          f = u - (s + e.offsetHeight),
          h = d - (c + e.offsetWidth)
        return { top: s, left: c, bottom: f, right: h, height: u, width: d }
      }
      function l(e, t) {
        let n,
          r,
          o,
          i = e,
          l = i.ownerDocument
        if (!l) return
        let c = l.documentElement
        if (!c) return
        let u = l.defaultView.HTMLElement,
          d = 0,
          f = 0,
          h = i.offsetHeight,
          m = i.offsetWidth
        for (; !(i === l.body || i === t); ) {
          if (((d += i.offsetTop || 0), (f += i.offsetLeft || 0), !(i.offsetParent instanceof u)))
            return
          i = i.offsetParent
        }
        if (t && t !== l && t !== l.defaultView && t !== l.documentElement && t !== l.body) {
          if (!(t instanceof u)) return
          ;(o = t), (n = t.scrollHeight), (r = t.scrollWidth)
        } else (o = c), (n = a(l.body, c)), (r = s(l.body, c))
        let p = n - (d + h),
          g = r - (f + m)
        return { top: d, left: f, bottom: p, right: g, _container: o }
      }
      function a(e, t) {
        return Math.max(
          e.scrollHeight,
          t.scrollHeight,
          e.offsetHeight,
          t.offsetHeight,
          t.clientHeight
        )
      }
      function s(e, t) {
        return Math.max(e.scrollWidth, t.scrollWidth, e.offsetWidth, t.offsetWidth, t.clientWidth)
      }
      n.d(t, { VZ: () => o, _C: () => i, cv: () => r, oE: () => l })
    },
    96776: (e, t, n) => {
      function r(e, t) {
        return o(i(e), t)
      }
      function o(e, t) {
        var n = e
        if (!n) return Promise.resolve(t())
        var r = n.ownerDocument.documentElement,
          o = (function (e) {
            for (var t = []; e; ) {
              var n = e.getBoundingClientRect(),
                r = n.top,
                o = n.left
              t.push({ element: e, top: r, left: o }), (e = e.parentElement)
            }
            return t
          })(n)
        return Promise.resolve(t()).then(function (e) {
          var t = (function (e) {
            for (var t = 0; t < e.length; t++) {
              var n = e[t]
              if (r.contains(n.element)) return n
            }
          })(o)
          if (t) {
            n = t.element
            var i = t.top,
              a = t.left,
              s = n.getBoundingClientRect(),
              c = s.top
            l(n, s.left - a, c - i)
          }
          return e
        })
      }
      function i(e) {
        if (e.activeElement !== e.body) return e.activeElement
        var t = e.querySelectorAll(':hover'),
          n = t.length
        if (n) return t[n - 1]
      }
      function l(e, t, n) {
        var r = e.ownerDocument,
          o = r.defaultView
        function i(e) {
          return e.offsetParent
            ? { top: e.scrollTop, left: e.scrollLeft }
            : { top: o.pageYOffset, left: o.pageXOffset }
        }
        function l(e) {
          var t = e
          if (t.offsetParent && t !== r.body) {
            for (; t !== r.body; ) {
              if (!t.parentElement) return
              t = t.parentElement
              var n = o.getComputedStyle(t),
                i = n.position,
                l = n.overflowY,
                a = n.overflowX
              if ('fixed' === i || 'auto' === l || 'auto' === a || 'scroll' === l || 'scroll' === a)
                break
            }
            return t
          }
        }
        for (var a = l(e), s = 0, c = 0; a; ) {
          var u = (function (e, t, n) {
            if (0 === t && 0 === n) return [0, 0]
            var l = i(e),
              a = l.top + n,
              s = l.left + t
            e === r || e === o || e === r.documentElement || e === r.body
              ? r.defaultView.scrollTo(s, a)
              : ((e.scrollTop = a), (e.scrollLeft = s))
            var c = i(e)
            return [c.left - l.left, c.top - l.top]
          })(a, t - s, n - c)
          if (((s += u[0]), (c += u[1]), s === t && c === n)) break
          a = l(a)
        }
      }
      n.d(t, { _8: () => r, uQ: () => o })
    },
    76006: (e, t, n) => {
      let r
      n.d(t, { Lj: () => v, Ih: () => S, P4: () => h, nW: () => W, fA: () => A, GO: () => T })
      let o = new WeakSet()
      function i(e) {
        o.add(e), e.shadowRoot && l(e.shadowRoot), c(e), s(e.ownerDocument)
      }
      function l(e) {
        c(e), s(e)
      }
      let a = new WeakMap()
      function s(e = document) {
        if (a.has(e)) return a.get(e)
        let t = !1,
          n = new MutationObserver((e) => {
            for (let t of e)
              if ('attributes' === t.type && t.target instanceof Element) f(t.target)
              else if ('childList' === t.type && t.addedNodes.length)
                for (let e of t.addedNodes) e instanceof Element && c(e)
          })
        n.observe(e, { childList: !0, subtree: !0, attributeFilter: ['data-action'] })
        let r = {
          get closed() {
            return t
          },
          unsubscribe() {
            ;(t = !0), a.delete(e), n.disconnect()
          },
        }
        return a.set(e, r), r
      }
      function c(e) {
        for (let t of e.querySelectorAll('[data-action]')) f(t)
        e instanceof Element && e.hasAttribute('data-action') && f(e)
      }
      function u(e) {
        let t = e.currentTarget
        for (let n of d(t))
          if (e.type === n.type) {
            let r = t.closest(n.tag)
            o.has(r) && 'function' == typeof r[n.method] && r[n.method](e)
            let i = t.getRootNode()
            if (i instanceof ShadowRoot && o.has(i.host) && i.host.matches(n.tag)) {
              let t = i.host
              'function' == typeof t[n.method] && t[n.method](e)
            }
          }
      }
      function* d(e) {
        for (let t of (e.getAttribute('data-action') || '').trim().split(/\s+/)) {
          let e = t.lastIndexOf(':'),
            n = Math.max(0, t.lastIndexOf('#')) || t.length
          yield {
            type: t.slice(0, e),
            tag: t.slice(e + 1, n),
            method: t.slice(n + 1) || 'handleEvent',
          }
        }
      }
      function f(e) {
        for (let t of d(e)) e.addEventListener(t.type, u)
      }
      function h(e, t) {
        let n = e.tagName.toLowerCase()
        if (e.shadowRoot) {
          for (let r of e.shadowRoot.querySelectorAll(`[data-target~="${n}.${t}"]`))
            if (!r.closest(n)) return r
        }
        for (let r of e.querySelectorAll(`[data-target~="${n}.${t}"]`))
          if (r.closest(n) === e) return r
      }
      function m(e, t) {
        let n = e.tagName.toLowerCase(),
          r = []
        if (e.shadowRoot)
          for (let o of e.shadowRoot.querySelectorAll(`[data-targets~="${n}.${t}"]`))
            o.closest(n) || r.push(o)
        for (let o of e.querySelectorAll(`[data-targets~="${n}.${t}"]`))
          o.closest(n) === e && r.push(o)
        return r
      }
      let p = (e) =>
          String('symbol' == typeof e ? e.description : e)
            .replace(/([A-Z]($|[a-z]))/g, '-$1')
            .replace(/--/g, '-')
            .replace(/^-|-$/, '')
            .toLowerCase(),
        g = (e, t = 'property') => {
          let n = p(e)
          if (!n.includes('-'))
            throw new DOMException(`${t}: ${String(e)} is not a valid ${t} name`, 'SyntaxError')
          return n
        }
      function b(e) {
        let t = p(e.name).replace(/-element$/, '')
        try {
          window.customElements.define(t, e), (window[e.name] = customElements.get(t))
        } catch (e) {
          if (!(e instanceof DOMException && 'NotSupportedError' === e.name)) throw e
        }
        return e
      }
      function w(e) {
        for (let t of e.querySelectorAll('template[data-shadowroot]'))
          t.parentElement === e &&
            e
              .attachShadow({
                mode: 'closed' === t.getAttribute('data-shadowroot') ? 'closed' : 'open',
              })
              .append(t.content.cloneNode(!0))
      }
      let y = 'attr'
      function v(e, t) {
        x(e, y).add(t)
      }
      let E = new WeakSet()
      function _(e, t) {
        if (E.has(e)) return
        E.add(e)
        let n = Object.getPrototypeOf(e),
          r = n?.constructor?.attrPrefix ?? 'data-'
        for (let o of (t || (t = x(n, y)), t)) {
          let t = e[o],
            n = g(`${r}${o}`),
            i = {
              configurable: !0,
              get() {
                return this.getAttribute(n) || ''
              },
              set(e) {
                this.setAttribute(n, e || '')
              },
            }
          'number' == typeof t
            ? (i = {
                configurable: !0,
                get() {
                  return Number(this.getAttribute(n) || 0)
                },
                set(e) {
                  this.setAttribute(n, e)
                },
              })
            : 'boolean' == typeof t &&
              (i = {
                configurable: !0,
                get() {
                  return this.hasAttribute(n)
                },
                set(e) {
                  this.toggleAttribute(n, e)
                },
              }),
            Object.defineProperty(e, o, i),
            o in e && !e.hasAttribute(n) && i.set.call(e, t)
        }
      }
      function k(e) {
        let t = e.observedAttributes || [],
          n = e.attrPrefix ?? 'data-',
          r = (e) => g(`${n}${e}`)
        Object.defineProperty(e, 'observedAttributes', {
          configurable: !0,
          get: () => [...x(e.prototype, y)].map(r).concat(t),
          set(e) {
            t = e
          },
        })
      }
      let C = Symbol.for('catalyst')
      let CatalystDelegate = class CatalystDelegate {
        constructor(e) {
          let t = this,
            n = e.prototype.connectedCallback
          e.prototype.connectedCallback = function () {
            t.connectedCallback(this, n)
          }
          let r = e.prototype.disconnectedCallback
          e.prototype.disconnectedCallback = function () {
            t.disconnectedCallback(this, r)
          }
          let o = e.prototype.attributeChangedCallback
          e.prototype.attributeChangedCallback = function (e, n, r) {
            t.attributeChangedCallback(this, e, n, r, o)
          }
          let i = e.observedAttributes || []
          Object.defineProperty(e, 'observedAttributes', {
            configurable: !0,
            get() {
              return t.observedAttributes(this, i)
            },
            set(e) {
              i = e
            },
          }),
            k(e),
            b(e)
        }
        observedAttributes(e, t) {
          return t
        }
        connectedCallback(e, t) {
          e.toggleAttribute('data-catalyst', !0),
            customElements.upgrade(e),
            w(e),
            _(e),
            i(e),
            t?.call(e),
            e.shadowRoot && l(e.shadowRoot)
        }
        disconnectedCallback(e, t) {
          t?.call(e)
        }
        attributeChangedCallback(e, t, n, r, o) {
          _(e), 'data-catalyst' !== t && o && o.call(e, t, n, r)
        }
      }
      function x(e, t) {
        if (!Object.prototype.hasOwnProperty.call(e, C)) {
          let t = e[C],
            n = (e[C] = new Map())
          if (t) for (let [e, r] of t) n.set(e, new Set(r))
        }
        let n = e[C]
        return n.has(t) || n.set(t, new Set()), n.get(t)
      }
      function A(e, t) {
        x(e, 'target').add(t),
          Object.defineProperty(e, t, {
            configurable: !0,
            get() {
              return h(this, t)
            },
          })
      }
      function T(e, t) {
        x(e, 'targets').add(t),
          Object.defineProperty(e, t, {
            configurable: !0,
            get() {
              return m(this, t)
            },
          })
      }
      function S(e) {
        new CatalystDelegate(e)
      }
      let O = new Map(),
        L = new Promise((e) => {
          'loading' !== document.readyState
            ? e()
            : document.addEventListener('readystatechange', () => e(), { once: !0 })
        }),
        P = new Promise((e) => {
          let t = new AbortController()
          t.signal.addEventListener('abort', () => e())
          let n = { once: !0, passive: !0, signal: t.signal },
            r = () => t.abort()
          document.addEventListener('mousedown', r, n),
            document.addEventListener('touchstart', r, n),
            document.addEventListener('keydown', r, n),
            document.addEventListener('pointerdown', r, n)
        }),
        R = (e) =>
          new Promise((t) => {
            let n = new IntersectionObserver(
              (e) => {
                for (let r of e)
                  if (r.isIntersecting) {
                    t(), n.disconnect()
                    return
                  }
              },
              { rootMargin: '0px 0px 256px 0px', threshold: 0.01 }
            )
            for (let t of document.querySelectorAll(e)) n.observe(t)
          }),
        j = { ready: () => L, firstInteraction: () => P, visible: R },
        M = new WeakMap()
      function $(e) {
        cancelAnimationFrame(M.get(e) || 0),
          M.set(
            e,
            requestAnimationFrame(() => {
              for (let t of O.keys()) {
                let n = e.matches(t) ? e : e.querySelector(t)
                if (customElements.get(t) || n) {
                  let r = n?.getAttribute('data-load-on') || 'ready',
                    o = r in j ? j[r] : j.ready
                  for (let e of O.get(t) || []) o(t).then(e)
                  O.delete(t), M.delete(e)
                }
              }
            })
          )
      }
      function W(e, t) {
        O.has(e) || O.set(e, new Set()),
          O.get(e).add(t),
          $(document.body),
          r ||
            (r = new MutationObserver((e) => {
              if (O.size) for (let t of e) for (let e of t.addedNodes) e instanceof Element && $(e)
            })).observe(document, { subtree: !0, childList: !0 })
      }
    },
    11793: (e, t, n) => {
      n.d(t, { EL: () => r, N9: () => w, Tz: () => y })
      let Leaf = class Leaf {
        constructor(e) {
          ;(this.children = []), (this.parent = e)
        }
        delete(e) {
          let t = this.children.indexOf(e)
          return (
            -1 !== t &&
            ((this.children = this.children.slice(0, t).concat(this.children.slice(t + 1))),
            0 === this.children.length && this.parent.delete(this),
            !0)
          )
        }
        add(e) {
          return this.children.push(e), this
        }
      }
      let RadixTrie = class RadixTrie {
        constructor(e) {
          ;(this.parent = null), (this.children = {}), (this.parent = e || null)
        }
        get(e) {
          return this.children[e]
        }
        insert(e) {
          let t = this
          for (let n = 0; n < e.length; n += 1) {
            let r = e[n],
              o = t.get(r)
            if (n === e.length - 1)
              return (
                o instanceof RadixTrie && (t.delete(o), (o = null)),
                o || ((o = new Leaf(t)), (t.children[r] = o)),
                o
              )
            o instanceof Leaf && (o = null),
              o || ((o = new RadixTrie(t)), (t.children[r] = o)),
              (t = o)
          }
          return t
        }
        delete(e) {
          for (let t in this.children) {
            let n = this.children[t]
            if (n === e) {
              let e = delete this.children[t]
              return (
                0 === Object.keys(this.children).length && this.parent && this.parent.delete(this),
                e
              )
            }
          }
          return !1
        }
      }
      function r(e) {
        let { ctrlKey: t, altKey: n, metaKey: r, key: l } = e,
          a = [],
          s = [t, n, r, i(e)]
        for (let [e, t] of s.entries()) t && a.push(o[e])
        return o.includes(l) || a.push(l), a.join('+')
      }
      let o = ['Control', 'Alt', 'Meta', 'Shift']
      function i(e) {
        let { shiftKey: t, code: n, key: r } = e
        return t && !(n.startsWith('Key') && r.toUpperCase() === r)
      }
      function l(e, t) {
        return c(s(e, t))
      }
      let a = /Mac|iPod|iPhone|iPad/i
      function s(e, t = navigator.platform) {
        let n = a.test(t) ? 'Meta' : 'Control'
        return e.replace('Mod', n)
      }
      function c(e) {
        let t = e.split('+').pop(),
          n = []
        for (let t of ['Control', 'Alt', 'Meta', 'Shift']) e.includes(t) && n.push(t)
        return n.push(t), n.join('+')
      }
      let SequenceTracker = class SequenceTracker {
        constructor({ onReset: e } = {}) {
          ;(this._path = []), (this.timer = null), (this.onReset = e)
        }
        get path() {
          return this._path
        }
        get sequence() {
          return this._path.join(' ')
        }
        registerKeypress(e) {
          ;(this._path = [...this._path, r(e)]), this.startTimer()
        }
        reset() {
          var e
          this.killTimer(),
            (this._path = []),
            null === (e = this.onReset) || void 0 === e || e.call(this)
        }
        killTimer() {
          null != this.timer && window.clearTimeout(this.timer), (this.timer = null)
        }
        startTimer() {
          this.killTimer(),
            (this.timer = window.setTimeout(() => this.reset(), SequenceTracker.CHORD_TIMEOUT))
        }
      }
      function u(e) {
        if (!(e instanceof HTMLElement)) return !1
        let t = e.nodeName.toLowerCase(),
          n = (e.getAttribute('type') || '').toLowerCase()
        return (
          'select' === t ||
          'textarea' === t ||
          ('input' === t &&
            'submit' !== n &&
            'reset' !== n &&
            'checkbox' !== n &&
            'radio' !== n &&
            'file' !== n) ||
          e.isContentEditable
        )
      }
      function d(e, t) {
        let n = new CustomEvent('hotkey-fire', { cancelable: !0, detail: { path: t } }),
          r = !e.dispatchEvent(n)
        r || (u(e) ? e.focus() : e.click())
      }
      function f(e) {
        let t = [],
          n = [''],
          r = !1
        for (let o = 0; o < e.length; o++) {
          if (r && ',' === e[o]) {
            t.push(n), (n = ['']), (r = !1)
            continue
          }
          if (' ' === e[o]) {
            n.push(''), (r = !1)
            continue
          }
          ;(r = '+' !== e[o]), (n[n.length - 1] += e[o])
        }
        return (
          t.push(n),
          t.map((e) => e.map((e) => l(e)).filter((e) => '' !== e)).filter((e) => e.length > 0)
        )
      }
      SequenceTracker.CHORD_TIMEOUT = 1500
      let h = new RadixTrie(),
        m = new WeakMap(),
        p = h,
        g = new SequenceTracker({
          onReset() {
            p = h
          },
        })
      function b(e) {
        if (e.defaultPrevented || !(e.target instanceof Node)) return
        if (u(e.target)) {
          let t = e.target
          if (!t.id || !t.ownerDocument.querySelector(`[data-hotkey-scope="${t.id}"]`)) return
        }
        let t = p.get(r(e))
        if (!t) {
          g.reset()
          return
        }
        if ((g.registerKeypress(e), (p = t), t instanceof Leaf)) {
          let n
          let r = e.target,
            o = !1,
            i = u(r)
          for (let e = t.children.length - 1; e >= 0; e -= 1) {
            n = t.children[e]
            let l = n.getAttribute('data-hotkey-scope')
            if ((!i && !l) || (i && r.id === l)) {
              o = !0
              break
            }
          }
          n && o && (d(n, g.path), e.preventDefault()), g.reset()
        }
      }
      function w(e, t) {
        0 === Object.keys(h.children).length && document.addEventListener('keydown', b)
        let n = f(t || e.getAttribute('data-hotkey') || ''),
          r = n.map((t) => h.insert(t).add(e))
        m.set(e, r)
      }
      function y(e) {
        let t = m.get(e)
        if (t && t.length) for (let n of t) n && n.delete(e)
        0 === Object.keys(h.children).length && document.removeEventListener('keydown', b)
      }
    },
    86058: (e, t, n) => {
      function r() {
        let e
        try {
          e = window.top.document.referrer
        } catch (t) {
          if (window.parent)
            try {
              e = window.parent.document.referrer
            } catch (e) {}
        }
        return '' === e && (e = document.referrer), e
      }
      function o() {
        try {
          return `${screen.width}x${screen.height}`
        } catch (e) {
          return 'unknown'
        }
      }
      function i() {
        let e = 0,
          t = 0
        try {
          return (
            'number' == typeof window.innerWidth
              ? ((t = window.innerWidth), (e = window.innerHeight))
              : null != document.documentElement && null != document.documentElement.clientWidth
              ? ((t = document.documentElement.clientWidth),
                (e = document.documentElement.clientHeight))
              : null != document.body &&
                null != document.body.clientWidth &&
                ((t = document.body.clientWidth), (e = document.body.clientHeight)),
            `${t}x${e}`
          )
        } catch (e) {
          return 'unknown'
        }
      }
      function l() {
        return navigator.languages ? navigator.languages.join(',') : navigator.language || ''
      }
      function a() {
        return {
          referrer: r(),
          user_agent: navigator.userAgent,
          screen_resolution: o(),
          browser_resolution: i(),
          browser_languages: l(),
          pixel_ratio: window.devicePixelRatio,
          timestamp: Date.now(),
          tz_seconds: -60 * new Date().getTimezoneOffset(),
        }
      }
      n.d(t, { R: () => AnalyticsClient })
      var s = n(82918)
      let AnalyticsClient = class AnalyticsClient {
        constructor(e) {
          this.options = e
        }
        get collectorUrl() {
          return this.options.collectorUrl
        }
        get clientId() {
          return this.options.clientId ? this.options.clientId : (0, s.b)()
        }
        createEvent(e) {
          return {
            page: location.href,
            title: document.title,
            context: { ...this.options.baseContext, ...e },
          }
        }
        sendPageView(e) {
          let t = this.createEvent(e)
          this.send({ page_views: [t] })
        }
        sendEvent(e, t) {
          let n = { ...this.createEvent(t), type: e }
          this.send({ events: [n] })
        }
        send({ page_views: e, events: t }) {
          let n = { client_id: this.clientId, page_views: e, events: t, request_context: a() },
            r = JSON.stringify(n)
          try {
            if (navigator.sendBeacon) {
              navigator.sendBeacon(this.collectorUrl, r)
              return
            }
          } catch {}
          fetch(this.collectorUrl, {
            method: 'POST',
            cache: 'no-cache',
            headers: { 'Content-Type': 'application/json' },
            body: r,
            keepalive: !1,
          })
        }
      }
    },
    88149: (e, t, n) => {
      n.d(t, { n: () => r })
      function r(e = 'ha') {
        let t
        let n = {},
          r = document.head.querySelectorAll(`meta[name^="${e}-"]`)
        for (let o of Array.from(r)) {
          let { name: r, content: i } = o,
            l = r.replace(`${e}-`, '').replace(/-/g, '_')
          'url' === l ? (t = i) : (n[l] = i)
        }
        if (!t) throw Error(`AnalyticsClient ${e}-url meta tag not found`)
        return { collectorUrl: t, ...(Object.keys(n).length > 0 ? { baseContext: n } : {}) }
      }
    },
  },
])
//# sourceMappingURL=vendors-node_modules_github_mini-throttle_dist_index_js-node_modules_github_remote-form_dist_-d19e5b-741ba9ff4988.js.map
